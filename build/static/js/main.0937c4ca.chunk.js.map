{"version":3,"sources":["components/Header.js","components/Footer.js","data/Data.js","components/Comment.js","components/Main.js","components/Post.js","App.js","index.js"],"names":["Header","className","src","srcSet","alt","Footer","href","ThemeContext","React","createContext","num1","name","comment","num2","Comment","addComment","props","num","setState","comments","state","id","length","reduce","p","c","form","date","Date","localStorage","setItem","JSON","stringify","removeComment","filter","handleChange","e","target","value","getItem","this","parse","numcom","context","console","log","map","key","style","fontStyle","onClick","bind","type","onChange","Component","contextType","Main","birthDate","itemScope","itemType","Math","floor","getTime","itemProp","htmlFor","CommentBlock","require","App","Post","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0937c4ca.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header className=\"container__header\">\n      <p className=\"container__hello\">\n        Привет! Меня зовут Андрей и я увлекаюсь фронтенд-разработкой\n      </p>\n      <div className=\"container__selfie\">\n        <img\n          className=\"img__selfie\"\n          src=\"img/selfie.jpg\"\n          srcSet=\"img/selfie.webp\"\n          alt=\"selfie\"\n        />\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <footer className=\"container__footer\">\n      <a href=\"https://github.com/streloc84\">\n        <img src=\"img/iconmonstr-github-3.svg\" alt=\"github link\"></img>\n      </a>\n      <a href=\"https://www.linkedin.com/in/%D0%B0%D0%BD%D0%B4%D1%80%D0%B5%D0%B9-%D0%B1%D0%B5%D1%81%D0%BF%D0%B0%D0%BB%D0%BE%D0%B2-44270217a/\">\n        <img src=\"img/iconmonstr-linkedin-1.svg\" alt=\"linkedin link\"></img>\n      </a>\n      <a href=\"https://www.instagram.com/streloc84\">\n        <img src=\"img/iconmonstr-instagram-11.svg\" alt=\"instagram link\"></img>\n      </a>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from 'react'\n\nexport var com={\n    num1:{\n        name:\"Andrey\",\n        comment:\"таратар\",\n    },\n    num2:{\n        name:\"Vasiliy\",\n        comment:\"nnnnn\",\n    },\n};\n\nexport const ThemeContext = React.createContext(com);\n\n\n","import React, { Component } from \"react\";\nimport { ThemeContext } from \"../data/Data\";\nimport { format } from \"date-fns\";\n\nclass Comment extends Component {\n  constructor() {\n    super();\n    this.state = {\n      comments: [],\n      form: {\n        name: \"\",\n        comment: \"\",\n      },\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"state\")) {\n      this.setState({\n        ...JSON.parse(localStorage.getItem(\"state\" + this.props.num)),\n      });\n    }\n\n    var numcom = \"state\" + this.props.num;\n    this.context[numcom] = this.state.form;\n    console.log(this.context[numcom]);\n  }\n\n  addComment = () => {\n    var numcom = \"state\" + this.props.num;\n    this.setState(\n      {\n        comments: [\n          ...this.state.comments,\n          {\n            id: this.state.comments.length\n              ? this.state.comments.reduce((p, c) => (p.id > c.id ? p : c)).id +\n                1\n              : 1, // max id +1\n            name: this.state.form.name,\n            comment: this.state.form.comment,\n            date: new Date(),\n          },\n        ],\n        form: {\n          name: \"\",\n          comment: \"\",\n        },\n      },\n      () =>\n        localStorage.setItem(\n          \"state\" + this.props.num,\n          JSON.stringify(this.state)\n        )\n    );\n  };\n\n  removeComment = (id) => {\n    this.setState(\n      {\n        comments: this.state.comments.filter((comment) => comment.id !== id),\n      },\n      () =>\n        localStorage.setItem(\n          \"state\" + this.props.num,\n          JSON.stringify(this.state)\n        )\n    );\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      form: {\n        ...this.state.form,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"Comment\">\n        {this.state.comments.map((comment) => (\n          <div key={comment.id}>\n            <span style={{ fontStyle: \"italic\" }}>\n              {comment.id} - {/* format(comment.date, 'dd/mm/yyyy') */}{\" \"}\n            </span>\n            <strong>{comment.name}: </strong>\n            <span>{comment.comment}</span>\n            <button onClick={this.removeComment.bind(null, comment.id)}>\n              Удалить\n            </button>\n          </div>\n        ))}\n        <div>\n          <ul className=\"wrapper\">\n            <li className=\"form-row\">\n              <label className=\"nameComment\">\n                Имя:{\" \"}\n                <input\n                  type=\"text\"\n                  value={this.state.form.name}\n                  name=\"name\"\n                  onChange={this.handleChange}\n                />\n              </label>\n            </li>\n            <li className=\"form-row\">\n              <label className=\"textComment\">\n                Комментарий:{\" \"}\n                <textarea\n                  name=\"comment\"\n                  value={this.state.form.comment}\n                  onChange={this.handleChange}\n                ></textarea>\n              </label>\n            </li>\n            <button onClick={this.addComment}>Добавить комментарий</button>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\nComment.contextType = ThemeContext;\nexport default Comment;\n","import React from \"react\";\nimport Comment from \"./Comment\";\n\nfunction Main() {\n  let birthDate=new Date(1984,8,27);\n  return (\n    <div>\n      <section className=\"about\" itemScope itemType=\"http://schema.org/Person\">\n        <p>\n          Немного о себе:\n          <br />\n          Мне {Math.floor((new Date().getTime()-new Date(birthDate))/(24 * 3600 * 365.25 * 1000))} лет.\n          <span itemProp=\"address\"> Я живу в Самаре.</span>\n          <span itemProp=\"alumniOf\">\n            {\" \"}\n            У меня экономическое образование(alma mater - УрГЭУ) и я работаю\n            менеджером на складе.{\" \"}\n          </span>\n          Занимаюсь спортом (железо и бег), люблю читать и развиваться. В данный\n          момент я увлекаюсь фронтенд-разработкой. Этот сайт пробная страничка\n          для отработки разных навыков.\n        </p>\n        <input type=\"checkbox\" id=\"hd-1\" className=\"hide\" />\n        <label htmlFor=\"hd-1\">Комментарии</label>\n\n        <Comment num=\"0\" />\n      </section>\n      <section className=\"about\">\n        <p>Основная модель по которой я развиваюсь:</p>\n        <input type=\"checkbox\" id=\"hd-2\" className=\"hide\" />\n        <label htmlFor=\"hd-2\">\n          Roadmap от уважаемого{\" \"}\n          <a href=\"https://github.com/kamranahmedse/kamranahmedse.github.io\">\n            kamranahmedse\n          </a>\n        </label>\n        <div>\n          <img\n            src=\"img/frontendScheme.png\"\n            alt=\"схема_развития\"\n            className=\"scheme__about\"\n            srcSet=\"img\\frontendScheme.webp\"\n          />\n        </div>\n        <input type=\"checkbox\" id=\"hd-4\" className=\"hide\" />\n        <label htmlFor=\"hd-4\">Комментарии</label>\n        <Comment num=\"1\" />\n      </section>\n    </div>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\nimport Comment from \"./Comment\";\n\nfunction CommentBlock() {\n  return (\n    <section className=\"about\">\n      <p>\n        Сделал небольшое погодное приложение, опять-таки на React\n        <br />\n        Определяет местоположение пользователя на основе данных\n        navigator.geolocation (или вручную). Данные тянет по API с\n        metaweather.com\n        <br />\n        <a href=\"https://streloc84.github.io/weather/\">\n          https://streloc84.github.io/weather/\n        </a>\n        <br />\n      </p>\n      <div></div>\n      <input type=\"checkbox\" id=\"hd-3\" className=\"hide\" />\n      <label htmlFor=\"hd-3\">Комментарии</label>\n      <Comment num=\"2\" />\n    </section>\n  );\n}\n\nexport default CommentBlock;\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport \"./App.css\";\nimport Main from \"./components/Main\";\nimport Post from \"./components/Post\";\n\n\n/* const http = require(\"./server.js\") */\nlet commentbase = require(\"./data/data.json\");\nvar baseOfComment = React.createContext(\"yellow\");\n\nfunction App() {\n  return (\n    <body>\n      <div className=\"container\">\n        <Header />\n        <main>\n          <Main />\n          <Post />\n        </main>\n        <Footer />\n      </div>\n    </body>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}