{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\strel_000\\\\Desktop\\\\\\u0432\\u0438\\u0437\\u0438\\u0442\\u043A\\u0430 \\u043D\\u0430 \\u0440\\u0435\\u0430\\u043A\\u0442\\\\whoiam\\\\src\\\\App.js\";\nimport React from 'react';\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport './App.css';\nimport Main from \"./components/Main\";\nimport CommentBlock from \"./components/CommentBlock\";\nimport Comment from \"./components/Comment\";\n/* const http = require(\"./server.js\") */\n\nlet commentbase = require(\"./data/data.json\");\n\nvar baseOfComment = React.createContext(\"yellow\");\n\nfunction App() {\n  return React.createElement(\"body\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(CommentBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })));\n} ///////////////////////////////////////////\n\n\nvar express = require(\"express\");\n\nvar bodyParser = require(\"body-parser\");\n\nvar fs = require(\"fs\");\n\nvar app = express();\nvar jsonParser = bodyParser.json();\napp.use(express.static(__dirname + \"/public\")); // получение списка данных\n\napp.get(\"/api/users\", function (req, res) {\n  var content = fs.readFileSync(\"users.json\", \"utf8\");\n  var users = JSON.parse(content);\n  res.send(users);\n}); // получение одного пользователя по id\n\napp.get(\"/api/users/:id\", function (req, res) {\n  var id = req.params.id; // получаем id\n\n  var content = fs.readFileSync(\"users.json\", \"utf8\");\n  var users = JSON.parse(content);\n  var user = null; // находим в массиве пользователя по id\n\n  for (var i = 0; i < users.length; i++) {\n    if (users[i].id == id) {\n      user = users[i];\n      break;\n    }\n  } // отправляем пользователя\n\n\n  if (user) {\n    res.send(user);\n  } else {\n    res.status(404).send();\n  }\n}); // получение отправленных данных\n\napp.post(\"/api/users\", jsonParser, function (req, res) {\n  if (!req.body) return res.sendStatus(400);\n  var userName = req.body.name;\n  var userAge = req.body.age;\n  var user = {\n    name: userName,\n    age: userAge\n  };\n  var data = fs.readFileSync(\"users.json\", \"utf8\");\n  var users = JSON.parse(data); // находим максимальный id\n\n  var id = Math.max.apply(Math, users.map(function (o) {\n    return o.id;\n  })); // увеличиваем его на единицу\n\n  user.id = id + 1; // добавляем пользователя в массив\n\n  users.push(user);\n  var data = JSON.stringify(users); // перезаписываем файл с новыми данными\n\n  fs.writeFileSync(\"users.json\", data);\n  res.send(user);\n}); // удаление пользователя по id\n\napp.delete(\"/api/users/:id\", function (req, res) {\n  var id = req.params.id;\n  var data = fs.readFileSync(\"users.json\", \"utf8\");\n  var users = JSON.parse(data);\n  var index = -1; // находим индекс пользователя в массиве\n\n  for (var i = 0; i < users.length; i++) {\n    if (users[i].id == id) {\n      index = i;\n      break;\n    }\n  }\n\n  if (index > -1) {\n    // удаляем пользователя из массива по индексу\n    var user = users.splice(index, 1)[0];\n    var data = JSON.stringify(users);\n    fs.writeFileSync(\"users.json\", data); // отправляем удаленного пользователя\n\n    res.send(user);\n  } else {\n    res.status(404).send();\n  }\n}); // изменение пользователя\n\napp.put(\"/api/users\", jsonParser, function (req, res) {\n  if (!req.body) return res.sendStatus(400);\n  var userId = req.body.id;\n  var userName = req.body.name;\n  var userAge = req.body.age;\n  var data = fs.readFileSync(\"users.json\", \"utf8\");\n  var users = JSON.parse(data);\n  var user;\n\n  for (var i = 0; i < users.length; i++) {\n    if (users[i].id == userId) {\n      user = users[i];\n      break;\n    }\n  } // изменяем данные у пользователя\n\n\n  if (user) {\n    user.age = userAge;\n    user.name = userName;\n    var data = JSON.stringify(users);\n    fs.writeFileSync(\"users.json\", data);\n    res.send(user);\n  } else {\n    res.status(404).send(user);\n  }\n});\napp.listen(3000, function () {\n  console.log(\"Сервер ожидает подключения...\");\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/strel_000/Desktop/визитка на реакт/whoiam/src/App.js"],"names":["React","Header","Footer","Main","CommentBlock","Comment","commentbase","require","baseOfComment","createContext","App","express","bodyParser","fs","app","jsonParser","json","use","static","__dirname","get","req","res","content","readFileSync","users","JSON","parse","send","id","params","user","i","length","status","post","body","sendStatus","userName","name","userAge","age","data","Math","max","apply","map","o","push","stringify","writeFileSync","delete","index","splice","put","userId","listen","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Header from \"./components/Header\"\r\nimport Footer from \"./components/Footer\"\r\nimport './App.css';\r\nimport Main from \"./components/Main\"\r\nimport CommentBlock from \"./components/CommentBlock\"\r\nimport Comment from \"./components/Comment\"\r\n\r\n/* const http = require(\"./server.js\") */\r\nlet commentbase=require(\"./data/data.json\");\r\nvar baseOfComment=React.createContext(\"yellow\");\r\n\r\nfunction App() {\r\n  return (\r\n    \r\n    <body>\r\n      <div className=\"container\">\r\n        <Header />\r\n        <main>\r\n        <Main />\r\n        \r\n        <CommentBlock />\r\n        \r\n        </main>\r\n        <Footer />\r\n      </div>  \r\n    </body>\r\n    \r\n  );\r\n}\r\n\r\n///////////////////////////////////////////\r\nvar express = require(\"express\");\r\nvar bodyParser = require(\"body-parser\");\r\nvar fs = require(\"fs\");\r\n \r\nvar app = express();\r\nvar jsonParser = bodyParser.json();\r\n \r\napp.use(express.static(__dirname + \"/public\"));\r\n// получение списка данных\r\napp.get(\"/api/users\", function(req, res){\r\n      \r\n    var content = fs.readFileSync(\"users.json\", \"utf8\");\r\n    var users = JSON.parse(content);\r\n    res.send(users);\r\n});\r\n// получение одного пользователя по id\r\napp.get(\"/api/users/:id\", function(req, res){\r\n      \r\n    var id = req.params.id; // получаем id\r\n    var content = fs.readFileSync(\"users.json\", \"utf8\");\r\n    var users = JSON.parse(content);\r\n    var user = null;\r\n    // находим в массиве пользователя по id\r\n    for(var i=0; i<users.length; i++){\r\n        if(users[i].id==id){\r\n            user = users[i];\r\n            break;\r\n        }\r\n    }\r\n    // отправляем пользователя\r\n    if(user){\r\n        res.send(user);\r\n    }\r\n    else{\r\n        res.status(404).send();\r\n    }\r\n});\r\n// получение отправленных данных\r\napp.post(\"/api/users\", jsonParser, function (req, res) {\r\n     \r\n    if(!req.body) return res.sendStatus(400);\r\n     \r\n    var userName = req.body.name;\r\n    var userAge = req.body.age;\r\n    var user = {name: userName, age: userAge};\r\n     \r\n    var data = fs.readFileSync(\"users.json\", \"utf8\");\r\n    var users = JSON.parse(data);\r\n     \r\n    // находим максимальный id\r\n    var id = Math.max.apply(Math,users.map(function(o){return o.id;}))\r\n    // увеличиваем его на единицу\r\n    user.id = id+1;\r\n    // добавляем пользователя в массив\r\n    users.push(user);\r\n    var data = JSON.stringify(users);\r\n    // перезаписываем файл с новыми данными\r\n    fs.writeFileSync(\"users.json\", data);\r\n    res.send(user);\r\n});\r\n // удаление пользователя по id\r\napp.delete(\"/api/users/:id\", function(req, res){\r\n      \r\n    var id = req.params.id;\r\n    var data = fs.readFileSync(\"users.json\", \"utf8\");\r\n    var users = JSON.parse(data);\r\n    var index = -1;\r\n    // находим индекс пользователя в массиве\r\n    for(var i=0; i<users.length; i++){\r\n        if(users[i].id==id){\r\n            index=i;\r\n            break;\r\n        }\r\n    }\r\n    if(index > -1){\r\n        // удаляем пользователя из массива по индексу\r\n        var user = users.splice(index, 1)[0];\r\n        var data = JSON.stringify(users);\r\n        fs.writeFileSync(\"users.json\", data);\r\n        // отправляем удаленного пользователя\r\n        res.send(user);\r\n    }\r\n    else{\r\n        res.status(404).send();\r\n    }\r\n});\r\n// изменение пользователя\r\napp.put(\"/api/users\", jsonParser, function(req, res){\r\n      \r\n    if(!req.body) return res.sendStatus(400);\r\n     \r\n    var userId = req.body.id;\r\n    var userName = req.body.name;\r\n    var userAge = req.body.age;\r\n     \r\n    var data = fs.readFileSync(\"users.json\", \"utf8\");\r\n    var users = JSON.parse(data);\r\n    var user;\r\n    for(var i=0; i<users.length; i++){\r\n        if(users[i].id==userId){\r\n            user = users[i];\r\n            break;\r\n        }\r\n    }\r\n    // изменяем данные у пользователя\r\n    if(user){\r\n        user.age = userAge;\r\n        user.name = userName;\r\n        var data = JSON.stringify(users);\r\n        fs.writeFileSync(\"users.json\", data);\r\n        res.send(user);\r\n    }\r\n    else{\r\n        res.status(404).send(user);\r\n    }\r\n});\r\n  \r\napp.listen(3000, function(){\r\n    console.log(\"Сервер ожидает подключения...\");\r\n});\r\n\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}