{"ast":null,"code":"import _objectSpread from \"/home/streloc84/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/reactsite/whoiam/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/streloc84/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/reactsite/whoiam/src/components/Comment.js\";\nimport React, { Component } from 'react';\nimport Data from \"../data/Data\";\nimport { format } from 'date-fns';\n\nclass Comment extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: [],\n      form: {\n        name: '',\n        comment: ''\n      }\n    };\n\n    this.addComment = () => {\n      this.setState({\n        comments: [...this.state.comments, {\n          id: this.state.comments.length ? this.state.comments.reduce((p, c) => p.id > c.id ? p : c).id + 1 : 1,\n          // max id +1\n          name: this.state.form.name,\n          comment: this.state.form.comment,\n          date: new Date()\n        }],\n        form: {\n          name: '',\n          comment: ''\n        }\n      }, () => localStorage.setItem('state' + this.props.num, JSON.stringify(this.state)));\n    };\n\n    this.removeComment = id => {\n      this.setState({\n        comments: this.state.comments.filter(comment => comment.id !== id)\n      }, () => localStorage.setItem('state' + this.props.num, JSON.stringify(this.state)));\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        form: _objectSpread({}, this.state.form, {\n          [e.target.name]: e.target.value\n        })\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('state')) {\n      this.setState(_objectSpread({}, JSON.parse(localStorage.getItem('state' + this.props.num))));\n    }\n\n    console.log(this.context);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.state.comments.map(comment => React.createElement(\"div\", {\n      key: comment.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        fontStyle: 'italic'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, comment.id, \" - \", \" \"), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, comment.name, \": \"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, comment.comment), React.createElement(\"button\", {\n      onClick: this.removeComment.bind(null, comment.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"nameComment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"\\u0418\\u043C\\u044F: \", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.form.name,\n      name: \"name\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))), React.createElement(\"li\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"textComment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439: \", React.createElement(\"textarea\", {\n      name: \"comment\",\n      value: this.state.form.comment,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      onClick: this.addComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\"))));\n  }\n\n}\n\nexport default Comment;","map":{"version":3,"sources":["/home/streloc84/Рабочий стол/reactsite/whoiam/src/components/Comment.js"],"names":["React","Component","Data","format","Comment","state","comments","form","name","comment","addComment","setState","id","length","reduce","p","c","date","Date","localStorage","setItem","props","num","JSON","stringify","removeComment","filter","handleChange","e","target","value","componentDidMount","getItem","parse","console","log","context","render","map","fontStyle","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Data from \"../data/Data\"\nimport { format } from 'date-fns'\n\n\nclass Comment extends Component {\n \n  state = {\n    comments: [],\n    form: {\n      name: '',\n      comment: ''\n    }\n  }\n  \n\n  \n\n  componentDidMount() {\n    if (localStorage.getItem('state')) {\n      this.setState({ ...JSON.parse(localStorage.getItem('state'+this.props.num)) })\n    }\n    console.log(this.context)\n  }\n \n  addComment = () => {\n    this.setState({\n      comments: [\n        ...this.state.comments,\n        {\n          id: this.state.comments.length ? this.state.comments.reduce((p, c) => p.id > c.id ? p : c).id + 1 : 1, // max id +1\n          name: this.state.form.name,\n          comment: this.state.form.comment,\n          date: new Date()\n        }\n      ],\n      form: {\n        name: '',\n        comment: ''\n      }\n    }, () => localStorage.setItem('state'+this.props.num, JSON.stringify(this.state)))\n  }\n \n  removeComment = (id) => {\n    this.setState({\n      comments: this.state.comments.filter(comment => comment.id !== id)\n    }, () => localStorage.setItem('state'+this.props.num, JSON.stringify(this.state)))\n  }\n \n  handleChange = (e) => {\n    \n    this.setState({\n      form: {\n        ...this.state.form,\n        [e.target.name]: e.target.value,\n      }\n    })\n  }\n \n  render() {\n    return (\n      <div className=\"Comment\">\n        {this.state.comments.map(comment => <div key={comment.id}>\n          <span style={{ fontStyle: 'italic' }}>{comment.id} - {/* format(comment.date, 'dd/mm/yyyy') */} </span>\n          <strong>{comment.name}: </strong>\n          <span>{comment.comment}</span>\n          <button onClick={this.removeComment.bind(null, comment.id)}>Удалить</button>\n        </div>)}\n        <div>\n          <ul className=\"wrapper\">\n            <li className=\"form-row\">\n            <label className=\"nameComment\">Имя: <input\n              type=\"text\"\n              value={this.state.form.name}\n              name=\"name\"\n              onChange={this.handleChange}\n              /></label>\n            </li>\n            <li className=\"form-row\">\n            <label className=\"textComment\">Комментарий: <textarea\n              name=\"comment\"\n              value={this.state.form.comment}\n              onChange={this.handleChange}\n              ></textarea>\n            </label>\n            </li>\n            <button onClick={this.addComment}>Добавить комментарий</button>\n\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n \nexport default Comment\n"]},"metadata":{},"sourceType":"module"}